@array CHAR True 4
@array CHAR False 5
@var CHAR char_flag
@var INT int_flag
@array INT list 101
@var INT n
@call main
@exit
@func quicksort
@para INT left
@para INT right
@var INT i
@var INT j
@var INT t
@var INT temp
@var INT _temp
@var INT _con
#0 = left GT right
@bz #0 quicksort_L_0_else_begin
@ret 
@j quicksort_L_0_else_over
quicksort_L_0_else_begin :
quicksort_L_0_else_over :
#0 = list ARRGET left
temp = #0
i = left
j = right
#0 = i NEQ j
@bz #0 quicksort_L_1_else_begin
quicksort_L_2_dobegin :
_con = 0
#1 = list ARRGET j
#2 = #1 GE temp
@bz #2 quicksort_L_3_else_begin
#3 = i LT j
@bz #3 quicksort_L_4_else_begin
_con = 1
@j quicksort_L_4_else_over
quicksort_L_4_else_begin :
quicksort_L_4_else_over :
@j quicksort_L_3_else_over
quicksort_L_3_else_begin :
quicksort_L_3_else_over :
_temp = 0
quicksort_L_5_for_cond :
@bz _con quicksort_L_5_for_end
@j quicksort_L_5_for_state
quicksort_L_5_for_step :
_temp = _temp ADD 1
@j quicksort_L_5_for_cond
quicksort_L_5_for_state :
#1 = j SUB 1
j = #1
_con = 0
#1 = list ARRGET j
#2 = #1 GE temp
@bz #2 quicksort_L_6_else_begin
#3 = i LT j
@bz #3 quicksort_L_7_else_begin
_con = 1
@j quicksort_L_7_else_over
quicksort_L_7_else_begin :
quicksort_L_7_else_over :
@j quicksort_L_6_else_over
quicksort_L_6_else_begin :
quicksort_L_6_else_over :
@j quicksort_L_5_for_step
quicksort_L_5_for_end :
_con = 0
#1 = list ARRGET i
#2 = #1 LE temp
@bz #2 quicksort_L_8_else_begin
#3 = i LT j
@bz #3 quicksort_L_9_else_begin
_con = 1
@j quicksort_L_9_else_over
quicksort_L_9_else_begin :
quicksort_L_9_else_over :
@j quicksort_L_8_else_over
quicksort_L_8_else_begin :
quicksort_L_8_else_over :
_temp = 0
quicksort_L_10_for_cond :
@bz _con quicksort_L_10_for_end
@j quicksort_L_10_for_state
quicksort_L_10_for_step :
_temp = _temp ADD 1
@j quicksort_L_10_for_cond
quicksort_L_10_for_state :
#1 = i ADD 1
i = #1
_con = 0
#1 = list ARRGET i
#2 = #1 LE temp
@bz #2 quicksort_L_11_else_begin
#3 = i LT j
@bz #3 quicksort_L_12_else_begin
_con = 1
@j quicksort_L_12_else_over
quicksort_L_12_else_begin :
quicksort_L_12_else_over :
@j quicksort_L_11_else_over
quicksort_L_11_else_begin :
quicksort_L_11_else_over :
@j quicksort_L_10_for_step
quicksort_L_10_for_end :
#1 = i LT j
@bz #1 quicksort_L_13_else_begin
#2 = list ARRGET i
t = #2
#2 = list ARRGET j
list ARRSET i #2
list ARRSET j t
@j quicksort_L_13_else_over
quicksort_L_13_else_begin :
quicksort_L_13_else_over :
#1 = i NEQ j
@bz #1 quicksort_L_2_doend
@j quicksort_L_2_dobegin
quicksort_L_2_doend :
@j quicksort_L_1_else_over
quicksort_L_1_else_begin :
quicksort_L_1_else_over :
#0 = list ARRGET i
list ARRSET left #0
list ARRSET i temp
@push left
#0 = i SUB 1
@push #0
@call quicksort
#0 = i ADD 1
@push #0
@push right
@call quicksort
@ret 
@func F
@para INT no
#0 = no EQ 0
@bz #0 F_L_0_else_begin
@ret 1
@j F_L_0_else_over
F_L_0_else_begin :
F_L_0_else_over :
#0 = no EQ 1
@bz #0 F_L_1_else_begin
@ret 1
@j F_L_1_else_over
F_L_1_else_begin :
F_L_1_else_over :
#0 = no SUB 1
@push #0
@call F
@get #1
#2 = no SUB 2
@push #2
@call F
@get #3
#4 = #1 ADD #3
@ret #4
@func bg
@para INT a
@para INT b
@var INT temp
@var INT i
#0 = a GT b
@bz #0 bg_L_0_else_begin
temp = 3
@j bg_L_0_else_over
bg_L_0_else_begin :
temp = 4
bg_L_0_else_over :
#0 = temp GE 3
@bz #0 bg_L_1_else_begin
#1 = temp NEQ 4
@bz #1 bg_L_2_else_begin
#2 = True ARRGET temp
#3 = #2 NEQ 47
@bz #3 bg_L_3_else_begin
@printf STRING S_0
@printf LINE
@j bg_L_3_else_over
bg_L_3_else_begin :
@ret 
bg_L_3_else_over :
@j bg_L_2_else_over
bg_L_2_else_begin :
#2 = False ARRGET temp
#3 = #2 NEQ 45
@bz #3 bg_L_4_else_begin
@printf STRING S_1
@printf LINE
@j bg_L_4_else_over
bg_L_4_else_begin :
bg_L_4_else_over :
bg_L_2_else_over :
@j bg_L_1_else_over
bg_L_1_else_begin :
bg_L_1_else_over :
True ARRSET 2 84
@ret 
@func _printf
@printf STRING S_2
@printf CHAR 84
@printf LINE
@printf STRING S_3
@printf CHAR 95
@printf LINE
@j _printf_L_0_else_begin
@printf STRING S_4
@printf LINE
@j _printf_L_0_else_over
_printf_L_0_else_begin :
_printf_L_0_else_over :
@j _printf_L_1_else_begin
@printf STRING S_5
@printf LINE
@j _printf_L_1_else_over
_printf_L_1_else_begin :
_printf_L_1_else_over :
@ret 
@func _scanf
@var CHAR temp
@scanf CHAR temp
@ret temp
@func int2char
@para INT no
#0 = no EQ 43
@bz #0 int2char_L_0_else_begin
@ret 43
@j int2char_L_0_else_over
int2char_L_0_else_begin :
int2char_L_0_else_over :
#0 = no EQ 45
@bz #0 int2char_L_1_else_begin
@ret 45
@j int2char_L_1_else_over
int2char_L_1_else_begin :
int2char_L_1_else_over :
#0 = no EQ 42
@bz #0 int2char_L_2_else_begin
@ret 42
@j int2char_L_2_else_over
int2char_L_2_else_begin :
int2char_L_2_else_over :
#0 = no EQ 47
@bz #0 int2char_L_3_else_begin
@ret 47
@j int2char_L_3_else_over
int2char_L_3_else_begin :
int2char_L_3_else_over :
#0 = no LE 57
@bz #0 int2char_L_4_else_begin
#1 = no GE 48
@bz #1 int2char_L_5_else_begin
@ret 49
@j int2char_L_5_else_over
int2char_L_5_else_begin :
int2char_L_5_else_over :
@j int2char_L_4_else_over
int2char_L_4_else_begin :
int2char_L_4_else_over :
#0 = no LE 90
@bz #0 int2char_L_6_else_begin
#1 = no GE 65
@bz #1 int2char_L_7_else_begin
@ret 65
@j int2char_L_7_else_over
int2char_L_7_else_begin :
int2char_L_7_else_over :
@j int2char_L_6_else_over
int2char_L_6_else_begin :
int2char_L_6_else_over :
#0 = no LE 122
@bz #0 int2char_L_8_else_begin
#1 = no GE 97
@bz #1 int2char_L_9_else_begin
@ret 97
@j int2char_L_9_else_over
int2char_L_9_else_begin :
int2char_L_9_else_over :
@j int2char_L_8_else_over
int2char_L_8_else_begin :
int2char_L_8_else_over :
@ret 48
@func ascii2int
@para CHAR chtemp
@ret chtemp
@func sum
@para INT a1
@para INT a2
@para CHAR a3
@para INT a4
@para INT a5
@para INT a6
@var INT temp
#0 = a1 ADD a2
#0 = #0 ADD a3
#0 = #0 ADD a4
#0 = #0 ADD a5
#0 = #0 ADD a6
temp = #0
@ret temp
@func conFun
@ret 10
@func main
@var CHAR proc
@var CHAR iproc
@var CHAR chtemp
@var INT a
@var INT b
@array INT array 3
@var INT i
@var INT j
@var INT itemp
True ARRSET 0 84
True ARRSET 1 114
True ARRSET 2 42
True ARRSET 3 47
False ARRSET 0 70
False ARRSET 1 97
False ARRSET 2 108
False ARRSET 3 43
False ARRSET 4 45
@scanf CHAR chtemp
@push chtemp
@call ascii2int
@get #0
a = #0
@printf STRING S_6
@printf INT a
@printf LINE
@call _scanf
@get #0
chtemp = #0
@printf STRING S_7
@printf INT chtemp
@printf LINE
main_L_0_dobegin :
@scanf INT itemp
@push itemp
@call F
@get #0
@printf INT #0
@printf LINE
main_L_0_doend :
b = 20
@push b
@call F
@get #0
b = #0
#0 = b NEQ 10946
@bz #0 main_L_1_else_begin
@printf STRING S_8
@printf LINE
@j main_L_1_else_over
main_L_1_else_begin :
main_L_1_else_over :
i = 0
main_L_2_for_cond :
#0 = i LT 3
@bz #0 main_L_2_for_end
@j main_L_2_for_state
main_L_2_for_step :
i = i ADD 1
@j main_L_2_for_cond
main_L_2_for_state :
array ARRSET i i
@j main_L_2_for_step
main_L_2_for_end :
#0 = i SUB 3
array ARRSET #0 10
b = 2
i = 1
main_L_3_for_cond :
#0 = i GE 0
@bz #0 main_L_3_for_end
@j main_L_3_for_state
main_L_3_for_step :
i = i SUB 1
@j main_L_3_for_cond
main_L_3_for_state :
#1 = array ARRGET i
#2 = array ARRGET b
#3 = #1 GT #2
@bz #3 main_L_4_else_begin
b = i
@j main_L_4_else_over
main_L_4_else_begin :
main_L_4_else_over :
@j main_L_3_for_step
main_L_3_for_end :
#0 = array ARRGET b
#1 = #0 NEQ 10
@bz #1 main_L_5_else_begin
@printf STRING S_9
@printf LINE
@j main_L_5_else_over
main_L_5_else_begin :
main_L_5_else_over :
@printf STRING S_10
#0 = array ARRGET 0
#1 = array ARRGET 1
#2 = #0 ADD #1
#3 = array ARRGET 2
#2 = #2 ADD #3
#4 = #2 MUL 3
#4 = #4 DIV 3
#5 = -1
#5 = #5 ADD #4
#5 = #5 ADD 1
#5 = #5 ADD b
#5 = #5 SUB b
@printf INT #5
@printf LINE
a = 13
@push a
@push 12
@call bg
@call _printf
a = 0
@bz a main_L_6_else_begin
@printf STRING S_11
@printf LINE
@j main_L_6_else_over
main_L_6_else_begin :
main_L_6_else_over :
chtemp = 98
@bz chtemp main_L_7_else_begin
char_flag = 97
itemp = 0
main_L_8_dobegin :
i = 1
main_L_9_for_cond :
#0 = i LT 6
@bz #0 main_L_9_for_end
@j main_L_9_for_state
main_L_9_for_step :
i = i ADD 1
@j main_L_9_for_cond
main_L_9_for_state :
#1 = itemp ADD i
itemp = #1
@j main_L_9_for_step
main_L_9_for_end :
#0 = itemp LE char_flag
@bz #0 main_L_8_doend
@j main_L_8_dobegin
main_L_8_doend :
#0 = itemp LE char_flag
@bz #0 main_L_10_else_begin
@printf STRING S_12
@printf LINE
@j main_L_10_else_over
main_L_10_else_begin :
main_L_10_else_over :
@j main_L_7_else_over
main_L_7_else_begin :
@printf STRING S_13
@printf LINE
main_L_7_else_over :
n = 10
list ARRSET 10 9
list ARRSET 1 8
list ARRSET 2 6
list ARRSET 3 4
list ARRSET 4 7
list ARRSET 5 3
list ARRSET 6 2
list ARRSET 7 1
list ARRSET 8 0
list ARRSET 9 5
@push 1
@push n
@call quicksort
i = 1
main_L_11_for_cond :
#0 = i LE n
@bz #0 main_L_11_for_end
@j main_L_11_for_state
main_L_11_for_step :
i = i ADD 1
@j main_L_11_for_cond
main_L_11_for_state :
#1 = list ARRGET i
#2 = i SUB 1
#3 = #1 NEQ #2
@bz #3 main_L_12_else_begin
@printf STRING S_14
@printf LINE
@j main_L_12_else_over
main_L_12_else_begin :
main_L_12_else_over :
@j main_L_11_for_step
main_L_11_for_end :
itemp = 99
@push itemp
@call int2char
@get #0
chtemp = #0
#0 = chtemp NEQ 97
@bz #0 main_L_13_else_begin
@printf STRING S_15
@printf LINE
@j main_L_13_else_over
main_L_13_else_begin :
main_L_13_else_over :
@push itemp
@call int2char
@get #0
@push #0
@call ascii2int
@get #1
#2 = #1 GT 97
@bz #2 main_L_14_else_begin
@printf STRING S_16
@printf LINE
@j main_L_14_else_over
main_L_14_else_begin :
main_L_14_else_over :
@push 2
@call int2char
@get #0
@push #0
@call ascii2int
@get #1
#2 = #1 GT 60
@bz #2 main_L_15_else_begin
@printf STRING S_17
@printf LINE
@j main_L_15_else_over
main_L_15_else_begin :
main_L_15_else_over :
@push itemp
@push chtemp
@call ascii2int
@get #0
@push #0
@call bg
#0 = list ARRGET 10
@push #0
@push 1
@push 2
@push 49
@push 4
@push 5
@push 6
@call sum
@get #1
@push #1
#2 = True ARRGET 2
@push #2
@push 20
@push 15
@call conFun
@get #3
@push #3
@call sum
@get #4
#5 = #4 NEQ 163
@bz #5 main_L_16_else_begin
@printf STRING S_18
@printf LINE
@j main_L_16_else_over
main_L_16_else_begin :
main_L_16_else_over :
@printf STRING S_19
@printf LINE
@printf STRING S_20
@printf LINE
@printf STRING S_21
@printf LINE
@printf STRING S_22
@printf LINE
@printf CHAR 49
@printf LINE
@printf STRING S_23
@printf LINE
@ret 
